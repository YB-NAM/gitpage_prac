"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/webgl-demo2/page",{

/***/ "(app-pages-browser)/./app/webgl-demo2/page.tsx":
/*!**********************************!*\
  !*** ./app/webgl-demo2/page.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useClient: function() { return /* binding */ useClient; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* __next_internal_client_entry_do_not_use__ useClient,default auto */ \nvar _s = $RefreshSig$();\n\n\nconst RollingGame = ()=>{\n    _s();\n    let numCylinders = 1;\n    const cylinders = [];\n    let numCones = 1;\n    const cones = [];\n    let rollLeft = false;\n    let rollRight = false;\n    let rollFar = false;\n    let rollNear = false;\n    let sphere;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        createScene();\n    }, []);\n    // Function to create cylinders\n    function createCylinders(scene) {\n        for(let i = 0; i < numCylinders; i++){\n            const cylinderGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.CylinderGeometry(1.0, 1.0, getRandomHeight(), 100);\n            const cylinderMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshPhongMaterial({\n                color: 0xff0000\n            });\n            const cylinder = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(cylinderGeometry, cylinderMaterial);\n            cylinder.position.set(getRandomPosition(), 0, getRandomPosition());\n            cylinder.castShadow = true;\n            scene.add(cylinder);\n            cylinders.push(cylinder);\n        }\n    }\n    // Function to create cones\n    function createCones(scene) {\n        for(let i = 0; i < numCones; i++){\n            const coneGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.CylinderGeometry(0, 2, getRandomHeight(), 100);\n            const coneMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshPhongMaterial({\n                color: 0xffff00\n            });\n            const cone = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(coneGeometry, coneMaterial);\n            cone.position.set(getRandomPosition(), 0, getRandomPosition());\n            cone.castShadow = true;\n            scene.add(cone);\n            cones.push(cone);\n        }\n    }\n    function getRandomPosition() {\n        return Math.random() * 50 - 25;\n    }\n    function getRandomHeight() {\n        return Math.random() * 30 + 10;\n    }\n    function handleCollisions(sphere) {\n        for(let i = 0; i < cylinders.length; i++){\n            const cylinder = cylinders[i];\n            if (sphere.position.distanceTo(cylinder.position) < 2) {\n                const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(cylinder.position, sphere.position).normalize();\n                const distance = 2 - sphere.position.distanceTo(cylinder.position);\n                cylinder.position.addScaledVector(direction, distance);\n            }\n        }\n    }\n    function handleCollisions2(sphere) {\n        for(let i = 0; i < cones.length; i++){\n            const cone = cones[i];\n            if (sphere.position.distanceTo(cone.position) < 2) {\n                const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(cone.position, sphere.position).normalize();\n                const distance = 2 - sphere.position.distanceTo(cone.position);\n                cone.position.addScaledVector(direction, distance);\n            }\n        }\n    }\n    function handleCollisions3(cylinder) {\n        for(let i = 0; i < cones.length; i++){\n            const cone = cones[i];\n            if (cylinder.position.distanceTo(cone.position) < 2) {\n                const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(cone.position, cylinder.position).normalize();\n                const distance = 2 - cylinder.position.distanceTo(cone.position);\n                cone.position.addScaledVector(direction, distance);\n            }\n        }\n    }\n    function handleCylinderCollisions() {\n        for(let i = 0; i < numCylinders; i++){\n            for(let j = i + 1; j < numCylinders; j++){\n                const cylinder1 = cylinders[i];\n                const cylinder2 = cylinders[j];\n                if (cylindersIntersect(cylinder1, cylinder2)) {\n                    const direction = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().subVectors(cylinder1.position, cylinder2.position).normalize();\n                    const overlapDistance = getOverlapDistance(cylinder1, cylinder2);\n                    const displacement = direction.multiplyScalar(overlapDistance / 2);\n                    cylinder1.position.add(displacement);\n                    cylinder2.position.sub(displacement);\n                }\n            }\n        }\n    }\n    function cylindersIntersect(cylinder1, cylinder2) {\n        // Cast the geometries to CylinderGeometry\n        const geometry1 = cylinder1.geometry;\n        const geometry2 = cylinder2.geometry;\n        // Use the 'parameters' property for the radius\n        const combinedRadius = geometry1.parameters.radiusTop + geometry2.parameters.radiusTop;\n        const distance = cylinder1.position.distanceTo(cylinder2.position);\n        return distance < combinedRadius;\n    }\n    function getOverlapDistance(cylinder1, cylinder2) {\n        // Cast the geometries to CylinderGeometry\n        const geometry1 = cylinder1.geometry;\n        const geometry2 = cylinder2.geometry;\n        // Use the 'parameters' property for the radius\n        const combinedRadius = geometry1.parameters.radiusTop + geometry2.parameters.radiusTop;\n        const distance = cylinder1.position.distanceTo(cylinder2.position);\n        return combinedRadius - distance;\n    }\n    let rotateAxis = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3();\n    function onKeyDown(event) {\n        const key = event.key.toLowerCase();\n        if (key === \"arrowleft\") {\n            rollFar = false;\n            rollNear = true;\n            rotateAxis.set(0, 1, 0);\n        } else if (key === \"arrowright\") {\n            rollFar = true;\n            rollNear = false;\n            rotateAxis.set(0, -1, 0);\n        } else if (key === \"arrowup\") {\n            rollLeft = false;\n            rollRight = true;\n            rotateAxis.set(1, 0, 0);\n        } else if (key === \"arrowdown\") {\n            rollLeft = true;\n            rollRight = false;\n            rotateAxis.set(-1, 0, 0);\n        } else if (key === \"r\") {\n            resetSpherePosition();\n        } else if (key === \"q\") {\n            location.reload();\n        }\n    }\n    function resetSpherePosition() {\n        sphere.position.set(0, 0, 0);\n    }\n    function createScene() {\n        numCylinders = 10;\n        numCones = 10;\n        const inputContainer = document.getElementById(\"inputContainer\");\n        if (inputContainer) {\n            inputContainer.style.display = \"none\";\n        }\n        const myScene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n        const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.set(0, 40, 0);\n        camera.lookAt(0, 0, 0);\n        const renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n            antialias: true\n        });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        document.body.appendChild(renderer.domElement);\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(1, 32, 32);\n        const material = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n            color: 0x00aaff,\n            roughness: 0.2,\n            metalness: 0.9\n        });\n        sphere = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geometry, material);\n        sphere.castShadow = true;\n        myScene.add(sphere);\n        const floorGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(50, 50);\n        const floorMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.MeshPhongMaterial({\n            color: 0xffffff\n        });\n        const floor = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(floorGeometry, floorMaterial);\n        floor.rotation.x = -Math.PI / 2;\n        floor.position.y = -1;\n        floor.receiveShadow = true;\n        myScene.add(floor);\n        const ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0xffffff, 0.5);\n        myScene.add(ambientLight);\n        const directionalLight = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(0xffffff, 0.8);\n        const lightDistance = 10;\n        directionalLight.position.set(lightDistance, camera.position.y, 0);\n        directionalLight.target.position.set(0, -1, 0);\n        directionalLight.castShadow = true;\n        myScene.add(directionalLight);\n        directionalLight.shadow.mapSize.width = 8192;\n        directionalLight.shadow.mapSize.height = 8192;\n        directionalLight.shadow.camera.near = 0.5;\n        directionalLight.shadow.camera.far = 50;\n        directionalLight.shadow.camera.left = -50;\n        directionalLight.shadow.camera.right = 50;\n        directionalLight.shadow.camera.top = -50;\n        directionalLight.shadow.camera.bottom = 50;\n        createCylinders(myScene);\n        createCones(myScene);\n        document.addEventListener(\"keydown\", onKeyDown);\n        const rotationSpeed = 0.03;\n        function animate() {\n            requestAnimationFrame(animate);\n            handleCollisions(sphere);\n            handleCollisions2(sphere);\n            for(let i = 0; i < numCylinders; i++){\n                handleCollisions3(cylinders[i]);\n            }\n            handleCylinderCollisions();\n            for(let i = 0; i < numCones; i++){\n                if (cones[i].position.x > 26 || cones[i].position.z > 26 || cones[i].position.z < -26 || cones[i].position.x < -26) {\n                    cones[i].position.y -= 0.1;\n                }\n            }\n            for(let i = 0; i < numCylinders; i++){\n                if (cylinders[i].position.x > 26 || cylinders[i].position.z > 26 || cylinders[i].position.z < -26 || cylinders[i].position.x < -26) {\n                    cylinders[i].position.y -= 0.1;\n                }\n            }\n            if (sphere.position.x > 26 || sphere.position.z > 26 || sphere.position.z < -26 || sphere.position.x < -26) {\n                sphere.position.y -= 0.1;\n                rollLeft = rollRight = rollFar = rollNear = false;\n            } else if (rollLeft) {\n                sphere.position.z += 0.05;\n            } else if (rollRight) {\n                sphere.position.z -= 0.05;\n            }\n            if (rollFar) {\n                sphere.position.x += 0.05;\n            } else if (rollNear) {\n                sphere.position.x -= 0.05;\n            }\n            directionalLight.position.set(Math.cos(Date.now() * 0.001) * lightDistance, camera.position.y, Math.sin(Date.now() * 0.001) * lightDistance);\n            sphere.rotateOnWorldAxis(rotateAxis, rotationSpeed);\n            renderer.render(myScene, camera);\n        }\n        animate();\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            id: \"inputContainer\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\YBIN\\\\Desktop\\\\git-web\\\\gitpage_prac\\\\git-web\\\\app\\\\webgl-demo2\\\\page.tsx\",\n            lineNumber: 267,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\YBIN\\\\Desktop\\\\git-web\\\\gitpage_prac\\\\git-web\\\\app\\\\webgl-demo2\\\\page.tsx\",\n        lineNumber: 266,\n        columnNumber: 5\n    }, undefined);\n};\n_s(RollingGame, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RollingGame;\n// Mark the parent component as a client entry\nconst useClient = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RollingGame);\nvar _c;\n$RefreshReg$(_c, \"RollingGame\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/webgl-demo2/page.tsx\n"));

/***/ })

});